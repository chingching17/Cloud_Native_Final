name: CD

on: 
  pull_request:
    types: [closed]
    branches:
      - main
  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create kubeconfig directory
      run: |
        mkdir -p $HOME/.kube

    - name: Set up kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > $HOME/.kube/config

    - name: Set up kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Build & Push latest image - mysite
      run: |
        docker buildx build -t ghcr.io/chingching17/mysite:latest -f Dockerfile .
        echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u USERNAME --password-stdin
        docker push ghcr.io/chingching17/mysite:latest
      working-directory: ./mysite

    - name: Deploy to GKE
      run: |
        # kubectl delete pod,deploy,svc,ingress --all
        # kubectl delete pods --all
        # kubectl delete deployments --all
        # # kubectl delete svc --all --selector='!component=kubernetes'
        # kubectl get svc -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}'
        # for svc in $(kubectl get svc -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}'); do
        #   if [ "$svc" != "kubernetes" ]; then
        #     kubectl delete svc $svc
        #   fi
        # done
        kubectl delete ingress --all
        kubectl apply -f ./k8s/deploys.yaml
        kubectl apply -f ./k8s/services.yaml
        kubectl apply -f ./k8s/ingress.yaml
